{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/joshuababcock/Desktop/projects/sweetFits/frontend/components/Search.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/* eslint-disable react/jsx-props-no-spreading */\nimport { useLazyQuery } from '@apollo/client';\nimport { resetIdCounter, useCombobox } from 'downshift';\nimport gql from 'graphql-tag';\nimport debounce from 'lodash.debounce';\nimport { useLayoutEffect } from 'react';\nimport { DropDown, DropDownItem, SearchStyles } from './styles/DropDown';\nconst SEARCH_PRODUCTS_QUERY = gql`\n  query SEARCH_PRODUCTS_QUERY($searchTerm: String!) {\n    searchTerm: allProducts(\n      where: {\n        OR: [\n          { name_contains_i: $searchTerm }\n          { description_contains_i: $searchTerm }\n        ]\n      }\n    ) {\n      id\n      name\n      photo {\n        image {\n          publicUrlTransformed\n        }\n      }\n    }\n  }\n`;\nexport default function Search() {\n  const [inputVaulues, {\n    loading,\n    data,\n    error\n  }] = useLazyQuery(SEARCH_PRODUCTS_QUERY, {\n    fetchPolicy: 'no-cache'\n  }); // Make sure it runs only once every 350 miliseconds\n\n  const findItemsButChill = debounce(findItems, 350);\n  resetIdCounter();\n  const {\n    getMenuProps,\n    getComboboxProps,\n    getInputProps\n  } = useCombobox({\n    items: [],\n\n    onInputValueChange() {\n      console.log('Input Changed');\n      findItemsButChill({\n        values: {\n          searchTerm: inputVaulues\n        }\n      });\n    },\n\n    onSelectedItemChange() {\n      console.log('Selected changed');\n    }\n\n  });\n  return /*#__PURE__*/_jsxDEV(SearchStyles, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({}, getComboboxProps()), {}, {\n      children: /*#__PURE__*/_jsxDEV(\"input\", _objectSpread({\n        type: \"search\"\n      }, getInputProps({\n        type: 'search',\n        placeholder: 'Search for an item',\n        id: 'search',\n        className: 'holding'\n      })), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DropDown, _objectSpread(_objectSpread({}, getMenuProps()), {}, {\n      children: [/*#__PURE__*/_jsxDEV(DropDownItem, {\n        children: \"HEy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DropDownItem, {\n        children: \"HEy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DropDownItem, {\n        children: \"HEy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DropDownItem, {\n        children: \"HEy\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this)]\n    }), void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/joshuababcock/Desktop/projects/sweetFits/frontend/components/Search.js"],"names":["useLazyQuery","resetIdCounter","useCombobox","gql","debounce","useLayoutEffect","DropDown","DropDownItem","SearchStyles","SEARCH_PRODUCTS_QUERY","Search","inputVaulues","loading","data","error","fetchPolicy","findItemsButChill","findItems","getMenuProps","getComboboxProps","getInputProps","items","onInputValueChange","console","log","values","searchTerm","onSelectedItemChange","type","placeholder","id","className"],"mappings":";;;;;;;;;AAAA;AACA,SAASA,YAAT,QAA6B,gBAA7B;AACA,SAASC,cAAT,EAAyBC,WAAzB,QAA4C,WAA5C;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,eAAT,QAAgC,OAAhC;AACA,SAASC,QAAT,EAAmBC,YAAnB,EAAiCC,YAAjC,QAAqD,mBAArD;AAEA,MAAMC,qBAAqB,GAAGN,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAnBA;AAqBA,eAAe,SAASO,MAAT,GAAkB;AAC/B,QAAM,CAACC,YAAD,EAAe;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,IAAX;AAAiBC,IAAAA;AAAjB,GAAf,IAA2Cd,YAAY,CAC3DS,qBAD2D,EAE3D;AACEM,IAAAA,WAAW,EAAE;AADf,GAF2D,CAA7D,CAD+B,CAQ/B;;AACA,QAAMC,iBAAiB,GAAGZ,QAAQ,CAACa,SAAD,EAAY,GAAZ,CAAlC;AACAhB,EAAAA,cAAc;AACd,QAAM;AAAEiB,IAAAA,YAAF;AAAgBC,IAAAA,gBAAhB;AAAkCC,IAAAA;AAAlC,MAAoDlB,WAAW,CAAC;AACpEmB,IAAAA,KAAK,EAAE,EAD6D;;AAEpEC,IAAAA,kBAAkB,GAAG;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACAR,MAAAA,iBAAiB,CAAC;AAChBS,QAAAA,MAAM,EAAE;AACNC,UAAAA,UAAU,EAAEf;AADN;AADQ,OAAD,CAAjB;AAKD,KATmE;;AAUpEgB,IAAAA,oBAAoB,GAAG;AACrBJ,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ;AACD;;AAZmE,GAAD,CAArE;AAcA,sBACE,QAAC,YAAD;AAAA,4BACE,+CAASL,gBAAgB,EAAzB;AAAA,6BACE;AACE,QAAA,IAAI,EAAC;AADP,SAEMC,aAAa,CAAC;AAChBQ,QAAAA,IAAI,EAAE,QADU;AAEhBC,QAAAA,WAAW,EAAE,oBAFG;AAGhBC,QAAAA,EAAE,EAAE,QAHY;AAIhBC,QAAAA,SAAS,EAAE;AAJK,OAAD,CAFnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAYE,QAAC,QAAD,kCAAcb,YAAY,EAA1B;AAAA,8BACE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD","sourcesContent":["/* eslint-disable react/jsx-props-no-spreading */\nimport { useLazyQuery } from '@apollo/client';\nimport { resetIdCounter, useCombobox } from 'downshift';\nimport gql from 'graphql-tag';\nimport debounce from 'lodash.debounce';\nimport { useLayoutEffect } from 'react';\nimport { DropDown, DropDownItem, SearchStyles } from './styles/DropDown';\n\nconst SEARCH_PRODUCTS_QUERY = gql`\n  query SEARCH_PRODUCTS_QUERY($searchTerm: String!) {\n    searchTerm: allProducts(\n      where: {\n        OR: [\n          { name_contains_i: $searchTerm }\n          { description_contains_i: $searchTerm }\n        ]\n      }\n    ) {\n      id\n      name\n      photo {\n        image {\n          publicUrlTransformed\n        }\n      }\n    }\n  }\n`;\n\nexport default function Search() {\n  const [inputVaulues, { loading, data, error }] = useLazyQuery(\n    SEARCH_PRODUCTS_QUERY,\n    {\n      fetchPolicy: 'no-cache',\n    }\n  );\n\n  // Make sure it runs only once every 350 miliseconds\n  const findItemsButChill = debounce(findItems, 350);\n  resetIdCounter();\n  const { getMenuProps, getComboboxProps, getInputProps } = useCombobox({\n    items: [],\n    onInputValueChange() {\n      console.log('Input Changed');\n      findItemsButChill({\n        values: {\n          searchTerm: inputVaulues,\n        },\n      });\n    },\n    onSelectedItemChange() {\n      console.log('Selected changed');\n    },\n  });\n  return (\n    <SearchStyles>\n      <div {...getComboboxProps()}>\n        <input\n          type=\"search\"\n          {...getInputProps({\n            type: 'search',\n            placeholder: 'Search for an item',\n            id: 'search',\n            className: 'holding',\n          })}\n        />\n      </div>\n      <DropDown {...getMenuProps()}>\n        <DropDownItem>HEy</DropDownItem>\n        <DropDownItem>HEy</DropDownItem>\n        <DropDownItem>HEy</DropDownItem>\n        <DropDownItem>HEy</DropDownItem>\n      </DropDown>\n    </SearchStyles>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}