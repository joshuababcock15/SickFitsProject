{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/joshuababcock/Desktop/projects/sweetFits/frontend/pages/_app.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport NProgress from 'nprogress';\nimport Router from 'next/router';\nimport { ApolloProvider } from '@apollo/client';\nimport Page from '../components/Page';\nimport '../components/styles/nprogress.css';\nimport withData from '../lib/withData';\nimport { CartStateProvider } from '../lib/cartState'; // TODO: swap with our own\n\nRouter.events.on('routeChangeStart', () => NProgress.start());\nRouter.events.on('routeChangeComplete', () => NProgress.done());\nRouter.events.on('routeChangeError', () => NProgress.done());\n\nfunction MyApp({\n  Component,\n  pageProps,\n  apollo\n}) {\n  return /*#__PURE__*/_jsxDEV(ApolloProvider, {\n    client: apollo,\n    children: /*#__PURE__*/_jsxDEV(CartStateProvider, {\n      children: /*#__PURE__*/_jsxDEV(Page, {\n        children: /*#__PURE__*/_jsxDEV(Component, _objectSpread({}, pageProps), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n} // fetch all the queries that in the children components\n\n\nMyApp.getStaticProps = async function ({\n  Component,\n  ctx\n}) {\n  let pageProps = {};\n\n  if (Component.getStaticProps) {\n    pageProps = await Component.getStaticProps(ctx);\n  } // allow to get any query variables at page level\n\n\n  pageProps.query = ctx.query;\n  return {\n    pageProps\n  };\n}; // Give you the app but inject the apollo client inside of it\n\n\nexport default withData(MyApp);","map":{"version":3,"sources":["/Users/joshuababcock/Desktop/projects/sweetFits/frontend/pages/_app.js"],"names":["NProgress","Router","ApolloProvider","Page","withData","CartStateProvider","events","on","start","done","MyApp","Component","pageProps","apollo","getStaticProps","ctx","query"],"mappings":";;;;;;;;;AAAA,OAAOA,SAAP,MAAsB,WAAtB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAO,oCAAP;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,SAASC,iBAAT,QAAkC,kBAAlC,C,CAEA;;AAEAJ,MAAM,CAACK,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqC,MAAMP,SAAS,CAACQ,KAAV,EAA3C;AACAP,MAAM,CAACK,MAAP,CAAcC,EAAd,CAAiB,qBAAjB,EAAwC,MAAMP,SAAS,CAACS,IAAV,EAA9C;AACAR,MAAM,CAACK,MAAP,CAAcC,EAAd,CAAiB,kBAAjB,EAAqC,MAAMP,SAAS,CAACS,IAAV,EAA3C;;AAEA,SAASC,KAAT,CAAe;AAAEC,EAAAA,SAAF;AAAaC,EAAAA,SAAb;AAAwBC,EAAAA;AAAxB,CAAf,EAAiD;AAC/C,sBACE,QAAC,cAAD;AAAgB,IAAA,MAAM,EAAEA,MAAxB;AAAA,2BACE,QAAC,iBAAD;AAAA,6BACE,QAAC,IAAD;AAAA,+BACE,QAAC,SAAD,oBAAeD,SAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AASD,C,CAED;;;AACAF,KAAK,CAACI,cAAN,GAAuB,gBAAgB;AAAEH,EAAAA,SAAF;AAAaI,EAAAA;AAAb,CAAhB,EAAoC;AACzD,MAAIH,SAAS,GAAG,EAAhB;;AACA,MAAID,SAAS,CAACG,cAAd,EAA8B;AAC5BF,IAAAA,SAAS,GAAG,MAAMD,SAAS,CAACG,cAAV,CAAyBC,GAAzB,CAAlB;AACD,GAJwD,CAKzD;;;AACAH,EAAAA,SAAS,CAACI,KAAV,GAAkBD,GAAG,CAACC,KAAtB;AACA,SAAO;AAAEJ,IAAAA;AAAF,GAAP;AACD,CARD,C,CAUA;;;AACA,eAAeR,QAAQ,CAACM,KAAD,CAAvB","sourcesContent":["import NProgress from 'nprogress';\nimport Router from 'next/router';\nimport { ApolloProvider } from '@apollo/client';\nimport Page from '../components/Page';\nimport '../components/styles/nprogress.css';\nimport withData from '../lib/withData';\nimport { CartStateProvider } from '../lib/cartState';\n\n// TODO: swap with our own\n\nRouter.events.on('routeChangeStart', () => NProgress.start());\nRouter.events.on('routeChangeComplete', () => NProgress.done());\nRouter.events.on('routeChangeError', () => NProgress.done());\n\nfunction MyApp({ Component, pageProps, apollo }) {\n  return (\n    <ApolloProvider client={apollo}>\n      <CartStateProvider>\n        <Page>\n          <Component {...pageProps} />\n        </Page>\n      </CartStateProvider>\n    </ApolloProvider>\n  );\n}\n\n// fetch all the queries that in the children components\nMyApp.getStaticProps = async function ({ Component, ctx }) {\n  let pageProps = {};\n  if (Component.getStaticProps) {\n    pageProps = await Component.getStaticProps(ctx);\n  }\n  // allow to get any query variables at page level\n  pageProps.query = ctx.query;\n  return { pageProps };\n};\n\n// Give you the app but inject the apollo client inside of it\nexport default withData(MyApp);\n"]},"metadata":{},"sourceType":"module"}