{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/joshuababcock/Desktop/projects/sweetFits/frontend/pages/orders.js\";\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport ErrorMessage from '../components/ErrorMessage';\nimport OrderItemStles from '../components/styles/OrderItemStles';\nimport formatMoney from '../lib/formatMoney';\nconst USER_ORDERS_QUERY = gql`\n  query USER_ORDERS_QUERY {\n    allOrders {\n      id\n      charge\n      total\n      user {\n        id\n      }\n      items {\n        id\n        name\n        description\n        quantity\n        photo {\n          image {\n            publicUrlTransformed\n          }\n        }\n      }\n    }\n  }\n`;\nconst OrderUl = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(350, 1fr));\n  grid-gap: 4rem;\n`;\nexport default function OrdersPage({\n  query\n}) {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(USER_ORDERS_QUERY);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading....\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 21\n  }, this);\n  const {\n    allOrders\n  } = data;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"You have \", allOrders === null || allOrders === void 0 ? void 0 : allOrders.length, \" orders!\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(OrderUl, {\n      children: [\"allOrders.map(order =>\", ' ', /*#__PURE__*/_jsxDEV(OrderItemStles, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"hey\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), ' ', \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["/Users/joshuababcock/Desktop/projects/sweetFits/frontend/pages/orders.js"],"names":["useQuery","gql","styled","ErrorMessage","OrderItemStles","formatMoney","USER_ORDERS_QUERY","OrderUl","ul","OrdersPage","query","data","error","loading","allOrders","length"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,cAAP,MAA2B,qCAA3B;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AAEA,MAAMC,iBAAiB,GAAGL,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAtBA;AAwBA,MAAMM,OAAO,GAAGL,MAAM,CAACM,EAAG;AAC1B;AACA;AACA;AACA,CAJA;AAMA,eAAe,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAA+B;AAC5C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2Bb,QAAQ,CAACM,iBAAD,CAAzC;AACA,MAAIO,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,QAAM;AAAEE,IAAAA;AAAF,MAAgBH,IAAtB;AAEA,sBACE;AAAA,4BACE;AAAA,8BAAcG,SAAd,aAAcA,SAAd,uBAAcA,SAAS,CAAEC,MAAzB;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAA,2CACyB,GADzB,eAEE,QAAC,cAAD;AAAA,+BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,EAIoB,GAJpB;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAYD","sourcesContent":["import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport styled from 'styled-components';\nimport ErrorMessage from '../components/ErrorMessage';\nimport OrderItemStles from '../components/styles/OrderItemStles';\nimport formatMoney from '../lib/formatMoney';\n\nconst USER_ORDERS_QUERY = gql`\n  query USER_ORDERS_QUERY {\n    allOrders {\n      id\n      charge\n      total\n      user {\n        id\n      }\n      items {\n        id\n        name\n        description\n        quantity\n        photo {\n          image {\n            publicUrlTransformed\n          }\n        }\n      }\n    }\n  }\n`;\n\nconst OrderUl = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(350, 1fr));\n  grid-gap: 4rem;\n`;\n\nexport default function OrdersPage({ query }) {\n  const { data, error, loading } = useQuery(USER_ORDERS_QUERY);\n  if (loading) return <p>Loading....</p>;\n  if (error) return <ErrorMessage error={error} />;\n\n  const { allOrders } = data;\n\n  return (\n    <div>\n      <h2>You have {allOrders?.length} orders!</h2>\n      <OrderUl>\n        allOrders.map(order =>{' '}\n        <OrderItemStles>\n          <p>hey</p>\n        </OrderItemStles>{' '}\n        )\n      </OrderUl>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}