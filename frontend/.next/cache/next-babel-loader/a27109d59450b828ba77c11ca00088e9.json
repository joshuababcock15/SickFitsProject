{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/joshuababcock/Desktop/projects/sweetFits/frontend/pages/orders.js\";\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport ErrorMessage from '../components/ErrorMessage';\nimport OrderStyles from '../components/styles/OrderStyles';\nimport formatMoney from '../lib/formatMoney';\nconst USER_ORDERS_QUERY = gql`\n  query USER_ORDERS_QUERY($id: ID!) {\n    order: Order(where: { id: $id }) {\n      allOrders {\n        id\n        charge\n        total\n        user {\n          id\n        }\n        items {\n          id\n          name\n          description\n          quantity\n          photo {\n            image {\n              publicUrlTransformed\n            }\n          }\n        }\n      }\n    }\n  }\n`;\nexport default function OrdersPage({\n  query\n}) {\n  const {\n    data,\n    error,\n    loading\n  } = useQuery(USER_ORDERS_QUERY);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading....\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 21\n  }, this);\n  const {\n    allOrders\n  } = data;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"hi\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 10\n  }, this);\n}","map":{"version":3,"sources":["/Users/joshuababcock/Desktop/projects/sweetFits/frontend/pages/orders.js"],"names":["useQuery","gql","ErrorMessage","OrderStyles","formatMoney","USER_ORDERS_QUERY","OrdersPage","query","data","error","loading","allOrders"],"mappings":";;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AAEA,MAAMC,iBAAiB,GAAGJ,GAAI;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAxBA;AA0BA,eAAe,SAASK,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAA+B;AAC5C,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,MAA2BV,QAAQ,CAACK,iBAAD,CAAzC;AACA,MAAIK,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AAEX,QAAM;AAAEE,IAAAA;AAAF,MAAgBH,IAAtB;AAEA,sBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACD","sourcesContent":["import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport ErrorMessage from '../components/ErrorMessage';\nimport OrderStyles from '../components/styles/OrderStyles';\nimport formatMoney from '../lib/formatMoney';\n\nconst USER_ORDERS_QUERY = gql`\n  query USER_ORDERS_QUERY($id: ID!) {\n    order: Order(where: { id: $id }) {\n      allOrders {\n        id\n        charge\n        total\n        user {\n          id\n        }\n        items {\n          id\n          name\n          description\n          quantity\n          photo {\n            image {\n              publicUrlTransformed\n            }\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function OrdersPage({ query }) {\n  const { data, error, loading } = useQuery(USER_ORDERS_QUERY);\n  if (loading) return <p>Loading....</p>;\n  if (error) return <ErrorMessage error={error} />;\n\n  const { allOrders } = data;\n\n  return <div>hi</div>;\n}\n"]},"metadata":{},"sourceType":"module"}