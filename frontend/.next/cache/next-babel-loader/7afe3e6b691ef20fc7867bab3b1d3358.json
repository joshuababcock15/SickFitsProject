{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/joshuababcock/Desktop/projects/sweetFits/frontend/node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/joshuababcock/Desktop/projects/sweetFits/frontend/pages/orders.js\",\n    _s = $RefreshSig$();\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  query USER_ORDERS_QUERY {\\n    allOrders {\\n      id\\n      charge\\n      total\\n      user {\\n        id\\n      }\\n      items {\\n        id\\n        name\\n        description\\n        quantity\\n        photo {\\n          image {\\n            publicUrlTransformed\\n          }\\n        }\\n      }\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport ErrorMessage from '../components/ErrorMessage';\nimport OrderStyles from '../components/styles/OrderStyles';\nimport formatMoney from '../lib/formatMoney';\nvar USER_ORDERS_QUERY = gql(_templateObject());\nexport default function OrdersPage(_ref) {\n  _s();\n\n  var query = _ref.query;\n\n  var _useQuery = useQuery(USER_ORDERS_QUERY),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading....\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 23\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(ErrorMessage, {\n    error: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 21\n  }, this);\n  var allOrders = data.allOrders;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: (allOrders === null || allOrders === void 0 ? void 0 : allOrders.length) || 'no data yet'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n}\n\n_s(OrdersPage, \"eE+cqeCo2lkI//dPlCsO1rICVGU=\", false, function () {\n  return [useQuery];\n});\n\n_c = OrdersPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"OrdersPage\");","map":{"version":3,"sources":["/Users/joshuababcock/Desktop/projects/sweetFits/frontend/pages/orders.js"],"names":["useQuery","gql","ErrorMessage","OrderStyles","formatMoney","USER_ORDERS_QUERY","OrdersPage","query","data","error","loading","allOrders","length"],"mappings":";;;;;;;;;;;;;;;;AAAA,SAASA,QAAT,QAAyB,gBAAzB;AACA,OAAOC,GAAP,MAAgB,aAAhB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,WAAP,MAAwB,kCAAxB;AACA,OAAOC,WAAP,MAAwB,oBAAxB;AAEA,IAAMC,iBAAiB,GAAGJ,GAAH,mBAAvB;AAwBA,eAAe,SAASK,UAAT,OAA+B;AAAA;;AAAA,MAATC,KAAS,QAATA,KAAS;;AAAA,kBACXP,QAAQ,CAACK,iBAAD,CADG;AAAA,MACpCG,IADoC,aACpCA,IADoC;AAAA,MAC9BC,KAD8B,aAC9BA,KAD8B;AAAA,MACvBC,OADuB,aACvBA,OADuB;;AAE5C,MAAIA,OAAJ,EAAa,oBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AACb,MAAID,KAAJ,EAAW,oBAAO,QAAC,YAAD;AAAc,IAAA,KAAK,EAAEA;AAArB;AAAA;AAAA;AAAA;AAAA,UAAP;AAHiC,MAKpCE,SALoC,GAKtBH,IALsB,CAKpCG,SALoC;AAO5C,sBAAO;AAAA,cAAM,CAAAA,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEC,MAAX,KAAqB;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GARuBN,U;UACWN,Q;;;KADXM,U","sourcesContent":["import { useQuery } from '@apollo/client';\nimport gql from 'graphql-tag';\nimport ErrorMessage from '../components/ErrorMessage';\nimport OrderStyles from '../components/styles/OrderStyles';\nimport formatMoney from '../lib/formatMoney';\n\nconst USER_ORDERS_QUERY = gql`\n  query USER_ORDERS_QUERY {\n    allOrders {\n      id\n      charge\n      total\n      user {\n        id\n      }\n      items {\n        id\n        name\n        description\n        quantity\n        photo {\n          image {\n            publicUrlTransformed\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default function OrdersPage({ query }) {\n  const { data, error, loading } = useQuery(USER_ORDERS_QUERY);\n  if (loading) return <p>Loading....</p>;\n  if (error) return <ErrorMessage error={error} />;\n\n  const { allOrders } = data;\n\n  return <div>{allOrders?.length || 'no data yet'}</div>;\n}\n"]},"metadata":{},"sourceType":"module"}